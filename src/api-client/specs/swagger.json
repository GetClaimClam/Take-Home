{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Validates a token and returns user information if valid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify authentication token and login user",
                "parameters": [
                    {
                        "description": "Login verification request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "description": "Terminates the user's session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/me": {
            "get": {
                "description": "Get user details by ID from auth token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    },
                    "401": {
                        "description": "Authentication error",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "User object (ID will be ignored and taken from auth token)",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user account from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user account",
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.APIError"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "Check if the API is operational",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.APIError": {
            "description": "Error response from the API",
            "type": "object",
            "properties": {
                "details": {
                    "description": "Additional error details (optional)\nexample: {\"field_name\": \"email\", \"reason\": \"invalid_format\"}",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error_code": {
                    "description": "The error code identifying the type of error\nexample: invalid_input",
                    "type": "string",
                    "example": "invalid_input"
                },
                "message": {
                    "description": "A human-readable error message\nexample: Invalid request parameters",
                    "type": "string",
                    "example": "Invalid request parameters"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "model.BusinessInfo": {
            "type": "object",
            "properties": {
                "businessName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userTitle": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "description": "A user in the system",
            "type": "object",
            "properties": {
                "addressLine1": {
                    "description": "Contact information",
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "businessInfo": {
                    "description": "Business information (if applicable)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.BusinessInfo"
                        }
                    ]
                },
                "city": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2022-01-01T12:00:00Z"
                },
                "createdBy": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "description": "Core user information",
                    "type": "string",
                    "example": "user123"
                },
                "lastLogin": {
                    "description": "Metadata",
                    "type": "string"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "signedLatest": {
                    "description": "Authorization and agreement tracking",
                    "type": "boolean"
                },
                "state": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        }
    }
}